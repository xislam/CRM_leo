# Generated by Django 4.2.3 on 2023-11-30 12:21

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BeforeUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Наименования')),
                ('name_en', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
                ('name_es', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
                ('name_ru', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Раздел')),
            ],
            options={
                'verbose_name': 'Разделы',
                'verbose_name_plural': 'Разделы',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Наименования')),
                ('name_en', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
                ('name_es', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
                ('name_ru', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курс',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя файла')),
                ('file', models.FileField(upload_to='Files', verbose_name='Файлы')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='GroupStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название группы')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Название группы')),
                ('name_es', models.CharField(max_length=100, null=True, verbose_name='Название группы')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Название группы')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('create_date_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('create_date_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('create_date_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Наименование')),
                ('name_en', models.CharField(max_length=300, null=True, verbose_name='Наименование')),
                ('name_es', models.CharField(max_length=300, null=True, verbose_name='Наименование')),
                ('name_ru', models.CharField(max_length=300, null=True, verbose_name='Наименование')),
                ('intricacy', models.CharField(max_length=250, verbose_name='Сложность')),
                ('intricacy_en', models.CharField(max_length=250, null=True, verbose_name='Сложность')),
                ('intricacy_es', models.CharField(max_length=250, null=True, verbose_name='Сложность')),
                ('intricacy_ru', models.CharField(max_length=250, null=True, verbose_name='Сложность')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_en', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_es', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_en', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_es', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('group_grade', models.FloatField(blank=True, max_length=10, null=True, verbose_name='Групповая оценка')),
                ('intricacy_coefficient', models.FloatField(blank=True, max_length=10, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1.5)], verbose_name='Коэффициент сложности')),
                ('group', models.ManyToManyField(to='account.groupstudent', verbose_name='Группа')),
                ('group_en', models.ManyToManyField(null=True, to='account.groupstudent', verbose_name='Группа')),
                ('group_es', models.ManyToManyField(null=True, to='account.groupstudent', verbose_name='Группа')),
                ('group_ru', models.ManyToManyField(null=True, to='account.groupstudent', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проект',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('full_name_en', models.CharField(max_length=255, null=True, verbose_name='ФИО')),
                ('full_name_es', models.CharField(max_length=255, null=True, verbose_name='ФИО')),
                ('full_name_ru', models.CharField(max_length=255, null=True, verbose_name='ФИО')),
                ('mobile_phone', models.CharField(max_length=25, verbose_name='Мобильный телефон')),
                ('mobile_phone_en', models.CharField(max_length=25, null=True, verbose_name='Мобильный телефон')),
                ('mobile_phone_es', models.CharField(max_length=25, null=True, verbose_name='Мобильный телефон')),
                ('mobile_phone_ru', models.CharField(max_length=25, null=True, verbose_name='Мобильный телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('email_en', models.EmailField(max_length=254, null=True, verbose_name='Электронная почта')),
                ('email_es', models.EmailField(max_length=254, null=True, verbose_name='Электронная почта')),
                ('email_ru', models.EmailField(max_length=254, null=True, verbose_name='Электронная почта')),
                ('tg_nickname', models.CharField(max_length=50, unique=True, verbose_name='Ник в Телеграм')),
                ('tg_nickname_en', models.CharField(max_length=50, null=True, unique=True, verbose_name='Ник в Телеграм')),
                ('tg_nickname_es', models.CharField(max_length=50, null=True, unique=True, verbose_name='Ник в Телеграм')),
                ('tg_nickname_ru', models.CharField(max_length=50, null=True, unique=True, verbose_name='Ник в Телеграм')),
                ('age', models.PositiveIntegerField(verbose_name='Возраст')),
                ('age_en', models.PositiveIntegerField(null=True, verbose_name='Возраст')),
                ('age_es', models.PositiveIntegerField(null=True, verbose_name='Возраст')),
                ('age_ru', models.PositiveIntegerField(null=True, verbose_name='Возраст')),
                ('gender', models.CharField(max_length=50, verbose_name='Пол')),
                ('gender_en', models.CharField(max_length=50, null=True, verbose_name='Пол')),
                ('gender_es', models.CharField(max_length=50, null=True, verbose_name='Пол')),
                ('gender_ru', models.CharField(max_length=50, null=True, verbose_name='Пол')),
                ('faculty', models.CharField(max_length=255, verbose_name='Факультет')),
                ('faculty_en', models.CharField(max_length=255, null=True, verbose_name='Факультет')),
                ('faculty_es', models.CharField(max_length=255, null=True, verbose_name='Факультет')),
                ('faculty_ru', models.CharField(max_length=255, null=True, verbose_name='Факультет')),
                ('other_interest_first', models.CharField(blank=True, max_length=150, null=True, verbose_name='Профессиональная сфера интересов другое')),
                ('other_interest_first_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='Профессиональная сфера интересов другое')),
                ('other_interest_first_es', models.CharField(blank=True, max_length=150, null=True, verbose_name='Профессиональная сфера интересов другое')),
                ('other_interest_first_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='Профессиональная сфера интересов другое')),
                ('other_interest_second', models.CharField(blank=True, max_length=150, null=True, verbose_name='Интересующие Вас ниши другое')),
                ('other_interest_second_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='Интересующие Вас ниши другое')),
                ('other_interest_second_es', models.CharField(blank=True, max_length=150, null=True, verbose_name='Интересующие Вас ниши другое')),
                ('other_interest_second_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='Интересующие Вас ниши другое')),
                ('other_interest_third', models.CharField(blank=True, max_length=150, null=True, verbose_name='цели другие')),
                ('other_interest_third_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='цели другие')),
                ('other_interest_third_es', models.CharField(blank=True, max_length=150, null=True, verbose_name='цели другие')),
                ('other_interest_third_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='цели другие')),
                ('manager_status', models.CharField(choices=[('Manager Lead', 'Лид менеджера'), ('In Progress with Manager', 'В работе у менеджера'), ('Rejected', 'Отказ'), ('Awaiting Payment', 'Ожидает оплаты'), ('Partially Paid', 'Частично оплачен'), ('Paid', 'Оплачен')], max_length=50, verbose_name='Статус менеджера')),
                ('manager_status_en', models.CharField(choices=[('Manager Lead', 'Лид менеджера'), ('In Progress with Manager', 'В работе у менеджера'), ('Rejected', 'Отказ'), ('Awaiting Payment', 'Ожидает оплаты'), ('Partially Paid', 'Частично оплачен'), ('Paid', 'Оплачен')], max_length=50, null=True, verbose_name='Статус менеджера')),
                ('manager_status_es', models.CharField(choices=[('Manager Lead', 'Лид менеджера'), ('In Progress with Manager', 'В работе у менеджера'), ('Rejected', 'Отказ'), ('Awaiting Payment', 'Ожидает оплаты'), ('Partially Paid', 'Частично оплачен'), ('Paid', 'Оплачен')], max_length=50, null=True, verbose_name='Статус менеджера')),
                ('manager_status_ru', models.CharField(choices=[('Manager Lead', 'Лид менеджера'), ('In Progress with Manager', 'В работе у менеджера'), ('Rejected', 'Отказ'), ('Awaiting Payment', 'Ожидает оплаты'), ('Partially Paid', 'Частично оплачен'), ('Paid', 'Оплачен')], max_length=50, null=True, verbose_name='Статус менеджера')),
                ('education_status', models.CharField(choices=[('Base', 'Базовый'), ('Optimal', 'Оптимальный'), ('Advanced', 'Продвинутый'), ('Free participation', 'Басплатное участие'), ('Dropout', 'Выбыл'), ('Grant', 'Грант')], max_length=50, verbose_name='Статус обучения')),
                ('education_status_en', models.CharField(choices=[('Base', 'Базовый'), ('Optimal', 'Оптимальный'), ('Advanced', 'Продвинутый'), ('Free participation', 'Басплатное участие'), ('Dropout', 'Выбыл'), ('Grant', 'Грант')], max_length=50, null=True, verbose_name='Статус обучения')),
                ('education_status_es', models.CharField(choices=[('Base', 'Базовый'), ('Optimal', 'Оптимальный'), ('Advanced', 'Продвинутый'), ('Free participation', 'Басплатное участие'), ('Dropout', 'Выбыл'), ('Grant', 'Грант')], max_length=50, null=True, verbose_name='Статус обучения')),
                ('education_status_ru', models.CharField(choices=[('Base', 'Базовый'), ('Optimal', 'Оптимальный'), ('Advanced', 'Продвинутый'), ('Free participation', 'Басплатное участие'), ('Dropout', 'Выбыл'), ('Grant', 'Грант')], max_length=50, null=True, verbose_name='Статус обучения')),
                ('hours_per_week', models.PositiveIntegerField(verbose_name='Сколько часов готовы уделять в неделю')),
                ('hours_per_week_en', models.PositiveIntegerField(null=True, verbose_name='Сколько часов готовы уделять в неделю')),
                ('hours_per_week_es', models.PositiveIntegerField(null=True, verbose_name='Сколько часов готовы уделять в неделю')),
                ('hours_per_week_ru', models.PositiveIntegerField(null=True, verbose_name='Сколько часов готовы уделять в неделю')),
                ('telegram_user_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='Телеграм ID User')),
                ('subscription_end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания подиски')),
                ('before_university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.beforeuniversity', verbose_name='Образование')),
                ('before_university_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.beforeuniversity', verbose_name='Образование')),
                ('before_university_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.beforeuniversity', verbose_name='Образование')),
                ('before_university_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.beforeuniversity', verbose_name='Образование')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.course', verbose_name='Курс')),
                ('course_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.course', verbose_name='Курс')),
                ('course_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.course', verbose_name='Курс')),
                ('course_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='TaskGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('description_en', models.TextField(null=True, verbose_name='Описание')),
                ('description_es', models.TextField(null=True, verbose_name='Описание')),
                ('description_ru', models.TextField(null=True, verbose_name='Описание')),
                ('project_cost', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_en', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_es', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_ru', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_en', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_es', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_en', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_es', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('grade', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('grade_en', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('grade_es', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('grade_ru', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.project', verbose_name='Проект')),
                ('project_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.project', verbose_name='Проект')),
                ('project_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.project', verbose_name='Проект')),
                ('project_ru', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Задача группы по проекту',
                'verbose_name_plural': 'Задача группы по проекту',
            },
        ),
        migrations.CreateModel(
            name='TestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('description_en', models.TextField(null=True, verbose_name='Описание')),
                ('description_es', models.TextField(null=True, verbose_name='Описание')),
                ('description_ru', models.TextField(null=True, verbose_name='Описание')),
                ('project_cost', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_en', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_es', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_ru', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_en', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_es', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_en', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_es', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('grade', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('grade_en', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('grade_es', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('grade_ru', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
            ],
            options={
                'verbose_name': 'Задача тесовое',
                'verbose_name_plural': 'Задача тестовое',
            },
        ),
        migrations.CreateModel(
            name='UnderSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Под раздел')),
            ],
            options={
                'verbose_name': 'Раздел Образование',
                'verbose_name_plural': 'Раздел Образование',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Наименования')),
                ('name_en', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
                ('name_es', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
                ('name_ru', models.CharField(max_length=125, null=True, verbose_name='Наименования')),
            ],
            options={
                'verbose_name': 'ВУЗ',
                'verbose_name_plural': 'ВУЗ',
            },
        ),
        migrations.CreateModel(
            name='UserInterestsFirst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=150, verbose_name='Интерес')),
                ('interest_en', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
                ('interest_es', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
                ('interest_ru', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
            ],
            options={
                'verbose_name': 'Профессиональная сфера интересов',
                'verbose_name_plural': 'Профессиональная сфера интересов',
            },
        ),
        migrations.CreateModel(
            name='UserInterestsSecond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=150, verbose_name='Интерес')),
                ('interest_en', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
                ('interest_es', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
                ('interest_ru', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
            ],
            options={
                'verbose_name': 'Интересующие Вас ниши',
                'verbose_name_plural': 'Интересующие Вас ниши',
            },
        ),
        migrations.CreateModel(
            name='UserInterestsThird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=150, verbose_name='Интерес')),
                ('interest_en', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
                ('interest_es', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
                ('interest_ru', models.CharField(max_length=150, null=True, verbose_name='Интерес')),
            ],
            options={
                'verbose_name': 'Цели',
                'verbose_name_plural': 'Цели',
            },
        ),
        migrations.CreateModel(
            name='TaskStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('description_en', models.TextField(null=True, verbose_name='Описание')),
                ('description_es', models.TextField(null=True, verbose_name='Описание')),
                ('description_ru', models.TextField(null=True, verbose_name='Описание')),
                ('project_cost', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_en', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_es', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('project_cost_ru', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_en', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_es', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('start_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_en', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_es', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('end_date_ru', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('personal_grade', models.FloatField(blank=True, max_length=10, null=True, verbose_name='Личная оценка')),
                ('deadline_compliance', models.FloatField(blank=True, max_length=10, null=True, verbose_name='Соблюдение дедлайнов')),
                ('manager_recommendation', models.FloatField(blank=True, max_length=10, null=True, verbose_name='Рекомендация менеджера')),
                ('task_rating', models.FloatField(blank=True, max_length=255, null=True, verbose_name='Рейтинг за задачу')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task', to='account.project', verbose_name='Проект')),
                ('project_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task', to='account.project', verbose_name='Проект')),
                ('project_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task', to='account.project', verbose_name='Проект')),
                ('project_ru', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task', to='account.project', verbose_name='Проект')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='account.student', verbose_name='Студент')),
                ('student_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='account.student', verbose_name='Студент')),
                ('student_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='account.student', verbose_name='Студент')),
                ('student_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Задача студента по проекту',
                'verbose_name_plural': 'Задача студента по проекту',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_create_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('date_create_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('date_create_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, verbose_name='Статус')),
                ('status_en', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, null=True, verbose_name='Статус')),
                ('status_es', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, null=True, verbose_name='Статус')),
                ('status_ru', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, null=True, verbose_name='Статус')),
                ('task_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Задача студента')),
                ('task_student_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Задача студента')),
                ('task_student_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Задача студента')),
                ('task_student_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Задача студента')),
            ],
            options={
                'verbose_name': 'Статус задачи студента',
                'verbose_name_plural': 'Статус задачи студента',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('date_create_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('date_create_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('date_create_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, verbose_name='Статус')),
                ('status_en', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, null=True, verbose_name='Статус')),
                ('status_es', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, null=True, verbose_name='Статус')),
                ('status_ru', models.CharField(choices=[('in_progress', 'В работу'), ('being_performed', 'Выполняется'), ('completed', 'Выполнена'), ('awaiting_os', 'Ожидает ОС'), ('under_revision', 'На правках'), ('finished', 'Завершена'), ('on_pause', 'На паузе')], max_length=50, null=True, verbose_name='Статус')),
                ('task_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Задача группы')),
                ('task_group_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Задача группы')),
                ('task_group_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Задача группы')),
                ('task_group_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Задача группы')),
            ],
            options={
                'verbose_name': 'Статус задачи группы',
                'verbose_name_plural': 'Статус задачи группы',
            },
        ),
        migrations.CreateModel(
            name='StudentPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='student_cv', verbose_name='Портфолио студента')),
                ('file_en', models.FileField(null=True, upload_to='student_cv', verbose_name='Портфолио студента')),
                ('file_es', models.FileField(null=True, upload_to='student_cv', verbose_name='Портфолио студента')),
                ('file_ru', models.FileField(null=True, upload_to='student_cv', verbose_name='Портфолио студента')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('create_date_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('create_date_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('create_date_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
                ('student_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
                ('student_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
                ('student_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Портфолио студента',
                'verbose_name_plural': 'Портфолио студента',
            },
        ),
        migrations.CreateModel(
            name='StudentCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='student_cv', verbose_name='Резюме студента')),
                ('file_en', models.FileField(null=True, upload_to='student_cv', verbose_name='Резюме студента')),
                ('file_es', models.FileField(null=True, upload_to='student_cv', verbose_name='Резюме студента')),
                ('file_ru', models.FileField(null=True, upload_to='student_cv', verbose_name='Резюме студента')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('create_date_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('create_date_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('create_date_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
                ('student_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
                ('student_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
                ('student_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Резюме студента',
                'verbose_name_plural': 'Резюме студента',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='interest_first',
            field=models.ManyToManyField(blank=True, to='account.userinterestsfirst', verbose_name='Профессиональная сфера интересов'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_first_en',
            field=models.ManyToManyField(blank=True, null=True, to='account.userinterestsfirst', verbose_name='Профессиональная сфера интересов'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_first_es',
            field=models.ManyToManyField(blank=True, null=True, to='account.userinterestsfirst', verbose_name='Профессиональная сфера интересов'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_first_ru',
            field=models.ManyToManyField(blank=True, null=True, to='account.userinterestsfirst', verbose_name='Профессиональная сфера интересов'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_second',
            field=models.ManyToManyField(blank=True, to='account.userinterestssecond', verbose_name='Интересующие Вас ниши'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_second_en',
            field=models.ManyToManyField(blank=True, null=True, to='account.userinterestssecond', verbose_name='Интересующие Вас ниши'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_second_es',
            field=models.ManyToManyField(blank=True, null=True, to='account.userinterestssecond', verbose_name='Интересующие Вас ниши'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_second_ru',
            field=models.ManyToManyField(blank=True, null=True, to='account.userinterestssecond', verbose_name='Интересующие Вас ниши'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_third',
            field=models.ManyToManyField(blank=True, to='account.userintereststhird', verbose_name='Цели'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_third_en',
            field=models.ManyToManyField(blank=True, null=True, to='account.userintereststhird', verbose_name='Цели'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_third_es',
            field=models.ManyToManyField(blank=True, null=True, to='account.userintereststhird', verbose_name='Цели'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_third_ru',
            field=models.ManyToManyField(blank=True, null=True, to='account.userintereststhird', verbose_name='Цели'),
        ),
        migrations.AddField(
            model_name='student',
            name='projects',
            field=models.ManyToManyField(blank=True, related_name='students', to='account.project', verbose_name='Проекты'),
        ),
        migrations.AddField(
            model_name='student',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.university', verbose_name='ВУЗ'),
        ),
        migrations.AddField(
            model_name='student',
            name='university_en',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.university', verbose_name='ВУЗ'),
        ),
        migrations.AddField(
            model_name='student',
            name='university_es',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.university', verbose_name='ВУЗ'),
        ),
        migrations.AddField(
            model_name='student',
            name='university_ru',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.university', verbose_name='ВУЗ'),
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('description', models.TextField(verbose_name='Описание')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма')),
                ('payment_status', models.BooleanField(default=False, verbose_name='Статус оплаты')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=225, verbose_name='Тема')),
                ('subject_en', models.CharField(max_length=225, null=True, verbose_name='Тема')),
                ('subject_es', models.CharField(max_length=225, null=True, verbose_name='Тема')),
                ('subject_ru', models.CharField(max_length=225, null=True, verbose_name='Тема')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_es', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('message_en', models.TextField(null=True, verbose_name='Сообщение')),
                ('message_es', models.TextField(null=True, verbose_name='Сообщение')),
                ('message_ru', models.TextField(null=True, verbose_name='Сообщение')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='img_mailing', verbose_name='Фото')),
                ('photo_en', models.ImageField(blank=True, null=True, upload_to='img_mailing', verbose_name='Фото')),
                ('photo_es', models.ImageField(blank=True, null=True, upload_to='img_mailing', verbose_name='Фото')),
                ('photo_ru', models.ImageField(blank=True, null=True, upload_to='img_mailing', verbose_name='Фото')),
                ('sent_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('sent_date_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата отправки')),
                ('sent_date_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата отправки')),
                ('sent_date_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата отправки')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mailings', to='account.student', verbose_name='Студент')),
                ('student_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mailings', to='account.student', verbose_name='Студент')),
                ('student_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mailings', to='account.student', verbose_name='Студент')),
                ('student_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mailings', to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Рассылка',
                'verbose_name_plural': 'Рассылки',
            },
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='captain',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='captain_en',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='captain_es',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='captain_ru',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='students',
            field=models.ManyToManyField(related_name='group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='students_en',
            field=models.ManyToManyField(null=True, related_name='group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='students_es',
            field=models.ManyToManyField(null=True, related_name='group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='students_ru',
            field=models.ManyToManyField(null=True, related_name='group_students', to='account.student'),
        ),
        migrations.CreateModel(
            name='DataKnowledgeFree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Тема')),
                ('title_en', models.TextField(null=True, verbose_name='Тема')),
                ('title_es', models.TextField(null=True, verbose_name='Тема')),
                ('title_ru', models.TextField(null=True, verbose_name='Тема')),
                ('url', models.TextField(verbose_name='Ссылки')),
                ('url_en', models.TextField(null=True, verbose_name='Ссылки')),
                ('url_es', models.TextField(null=True, verbose_name='Ссылки')),
                ('url_ru', models.TextField(null=True, verbose_name='Ссылки')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('chapter_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('chapter_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('chapter_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('files', models.ManyToManyField(to='account.file', verbose_name='Файлы')),
                ('under_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
                ('under_section_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
                ('under_section_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
                ('under_section_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
            ],
            options={
                'verbose_name': 'База знаний бесплатно',
                'verbose_name_plural': 'База знаний бесплатно',
            },
        ),
        migrations.CreateModel(
            name='DataKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Тема')),
                ('title_en', models.TextField(null=True, verbose_name='Тема')),
                ('title_es', models.TextField(null=True, verbose_name='Тема')),
                ('title_ru', models.TextField(null=True, verbose_name='Тема')),
                ('url', models.TextField(verbose_name='Ссылки')),
                ('url_en', models.TextField(null=True, verbose_name='Ссылки')),
                ('url_es', models.TextField(null=True, verbose_name='Ссылки')),
                ('url_ru', models.TextField(null=True, verbose_name='Ссылки')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('chapter_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('chapter_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('chapter_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('files', models.ManyToManyField(to='account.file', verbose_name='Файлы')),
                ('under_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
                ('under_section_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
                ('under_section_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
                ('under_section_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
            ],
            options={
                'verbose_name': 'База знаний платно',
                'verbose_name_plural': 'База знаний платно',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(verbose_name='Текст комментария')),
                ('comment_text_en', models.TextField(null=True, verbose_name='Текст комментария')),
                ('comment_text_es', models.TextField(null=True, verbose_name='Текст комментария')),
                ('comment_text_ru', models.TextField(null=True, verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('created_at_en', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('created_at_es', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('created_at_ru', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='account.project', verbose_name='Проект')),
                ('project_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='account.project', verbose_name='Проект')),
                ('project_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='account.project', verbose_name='Проект')),
                ('project_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='account.project', verbose_name='Проект')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Капитан группы')),
                ('student_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Капитан группы')),
                ('student_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Капитан группы')),
                ('student_ru', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Капитан группы')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='админ')),
                ('user_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='админ')),
                ('user_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='админ')),
                ('user_ru', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='админ')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='AnswerTestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('file_en', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('file_es', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('file_ru', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('url_en', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('url_es', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('url_ru', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.testtask', verbose_name='Ответ по задаче')),
                ('answer_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.testtask', verbose_name='Ответ по задаче')),
                ('answer_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.testtask', verbose_name='Ответ по задаче')),
                ('answer_ru', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.testtask', verbose_name='Ответ по задаче')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответы',
                'verbose_name_plural': 'Ответы',
            },
        ),
        migrations.CreateModel(
            name='AnswersStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Ответ на задачу')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ студента',
                'verbose_name_plural': 'Ответ студента',
            },
        ),
        migrations.CreateModel(
            name='AnswerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('file_en', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('file_es', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('file_ru', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('url_en', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('url_es', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('url_ru', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Ответ группы')),
                ('answer_en', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Ответ группы')),
                ('answer_es', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Ответ группы')),
                ('answer_ru', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Ответ группы')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_en', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_es', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('user_ru', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ группы',
                'verbose_name_plural': 'Ответ группы',
            },
        ),
    ]

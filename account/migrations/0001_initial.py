# Generated by Django 4.2.3 on 2023-08-30 11:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО')),
                ('mobile_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Мобильный телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Электронная почта')),
                ('tg_nickname', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ник в Телеграм')),
                ('age', models.PositiveIntegerField(blank=True, null=True, verbose_name='Возраст')),
                ('gender', models.CharField(blank=True, max_length=10, null=True, verbose_name='Пол')),
                ('university', models.CharField(blank=True, max_length=255, null=True, verbose_name='ВУЗ')),
                ('course', models.PositiveIntegerField(blank=True, null=True, verbose_name='Курс')),
                ('faculty', models.CharField(blank=True, max_length=255, null=True, verbose_name='Факультет')),
                ('status', models.CharField(blank=True, choices=[('previous_flow', 'Прошлый поток'), ('subscribed_to_chatbot', 'Подписан на чат-бот'), ('lead', 'Лид'), ('in_progress', 'В работе у менеджера'), ('rejected', 'Отказ'), ('awaiting_payment', 'Ожидает оплаты'), ('partially_paid', 'Частично оплачен'), ('paid', 'Оплачен'), ('graduate', 'Выпускник'), ('working_group', 'Рабочая группа'), ('dropout', 'Выбыл')], max_length=30, null=True, verbose_name='Статус')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BeforeUniversity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Наименования')),
            ],
            options={
                'verbose_name': 'Образование',
                'verbose_name_plural': 'Образование',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Раздел')),
            ],
            options={
                'verbose_name': 'Разделы',
                'verbose_name_plural': 'Разделы',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Наименования')),
            ],
            options={
                'verbose_name': 'Курс',
                'verbose_name_plural': 'Курс',
            },
        ),
        migrations.CreateModel(
            name='GroupStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название группы')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Наименование')),
                ('intricacy', models.CharField(max_length=250, verbose_name='Сложность')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('grade', models.CharField(max_length=250, verbose_name='Оценка')),
                ('group', models.ManyToManyField(to='account.groupstudent', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проект',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='ФИО')),
                ('mobile_phone', models.CharField(max_length=15, verbose_name='Мобильный телефон')),
                ('email', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('tg_nickname', models.CharField(max_length=50, unique=True, verbose_name='Ник в Телеграм')),
                ('age', models.PositiveIntegerField(verbose_name='Возраст')),
                ('gender', models.CharField(max_length=10, verbose_name='Пол')),
                ('faculty', models.CharField(max_length=255, verbose_name='Факультет')),
                ('other_interest_first', models.CharField(blank=True, max_length=150, null=True, verbose_name='Профессиональная сфера интересов другое')),
                ('other_interest_second', models.CharField(blank=True, max_length=150, null=True, verbose_name='Интересующие Вас ниши другое')),
                ('other_interest_third', models.CharField(blank=True, max_length=150, null=True, verbose_name='цели другие')),
                ('manager_status', models.CharField(choices=[('lead', 'Лид'), ('in_progress', 'В работе у менеджера'), ('rejected', 'Отказ'), ('waiting_for_payment', 'Ожидает оплаты'), ('partially_paid', 'Частично оплачен'), ('paid', 'Оплачен')], max_length=20, verbose_name='Статус менеджера')),
                ('education_status', models.CharField(choices=[('free_subscription_registration', 'Регистрация на бесплатную подписку'), ('completed_free_subscription', 'Завершена бесплатная подписка'), ('paid_subscription_member', 'Участник платной подписки'), ('course_participant', 'Участник курса'), ('dropped_out', 'Выбыл'), ('completed_education', 'Завершил обучение')], max_length=30, verbose_name='Статус обучения')),
                ('hours_per_week', models.PositiveIntegerField(verbose_name='Сколько часов готовы уделять в неделю')),
                ('before_university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.beforeuniversity', verbose_name='Образование')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.course', verbose_name='Курс')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Студенты',
            },
        ),
        migrations.CreateModel(
            name='TaskGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('project_cost', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('grade', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.project', verbose_name='Проект')),
            ],
            options={
                'verbose_name': 'Задача группы по проекту',
                'verbose_name_plural': 'Задача группы по проекту',
            },
        ),
        migrations.CreateModel(
            name='TestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('project_cost', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('grade', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
            ],
            options={
                'verbose_name': 'Задача тесовое',
                'verbose_name_plural': 'Задача тестовое',
            },
        ),
        migrations.CreateModel(
            name='UnderSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Под раздел')),
            ],
            options={
                'verbose_name': 'Раздел Образование',
                'verbose_name_plural': 'Раздел Образование',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=125, verbose_name='Наименования')),
            ],
            options={
                'verbose_name': 'ВУЗ',
                'verbose_name_plural': 'ВУЗ',
            },
        ),
        migrations.CreateModel(
            name='UserInterestsFirst',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=150, verbose_name='Интерес')),
            ],
            options={
                'verbose_name': 'Профессиональная сфера интересов',
                'verbose_name_plural': 'Профессиональная сфера интересов',
            },
        ),
        migrations.CreateModel(
            name='UserInterestsSecond',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=150, verbose_name='Интерес')),
            ],
            options={
                'verbose_name': 'Интересующие Вас ниши',
                'verbose_name_plural': 'Интересующие Вас ниши',
            },
        ),
        migrations.CreateModel(
            name='UserInterestsThird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interest', models.CharField(max_length=150, verbose_name='Интерес')),
            ],
            options={
                'verbose_name': 'Цели',
                'verbose_name_plural': 'Цели',
            },
        ),
        migrations.CreateModel(
            name='TaskStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Описание')),
                ('project_cost', models.CharField(blank=True, max_length=120, null=True, verbose_name='Стоимость')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('grade', models.IntegerField(blank=True, null=True, verbose_name='оценка')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.project', verbose_name='Проект')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Задача студента по проекту',
                'verbose_name_plural': 'Задача студента по проекту',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('В работу', 'В работу'), ('Выполняется', 'Выполняется'), ('Выполнена', 'Выполнена'), ('Ожидает ОС', 'Ожидает ОС'), ('На правках', 'На правках'), ('Завершена', 'Завершена'), ('На паузе', 'На паузе')], max_length=50, verbose_name='Статус')),
                ('task_student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Задача студента')),
            ],
            options={
                'verbose_name': 'Статус задачи студента',
                'verbose_name_plural': 'Статус задачи студента',
            },
        ),
        migrations.CreateModel(
            name='TaskStatusGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('status', models.CharField(choices=[('В работу', 'В работу'), ('Выполняется', 'Выполняется'), ('Выполнена', 'Выполнена'), ('Ожидает ОС', 'Ожидает ОС'), ('На правках', 'На правках'), ('Завершена', 'Завершена'), ('На паузе', 'На паузе')], max_length=50, verbose_name='Статус')),
                ('task_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Задача группы')),
            ],
            options={
                'verbose_name': 'Статус задачи группы',
                'verbose_name_plural': 'Статус задачи группы',
            },
        ),
        migrations.CreateModel(
            name='StudentPortfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='student_cv', verbose_name='Портфолио студента')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Портфолио студента',
                'verbose_name_plural': 'Портфолио студента',
            },
        ),
        migrations.CreateModel(
            name='StudentCV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='student_cv', verbose_name='Резюме студента')),
                ('create_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Резюме студента',
                'verbose_name_plural': 'Резюме студента',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='interest_first',
            field=models.ManyToManyField(blank=True, to='account.userinterestsfirst', verbose_name='Профессиональная сфера интересов'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_second',
            field=models.ManyToManyField(blank=True, to='account.userinterestssecond', verbose_name='Интересующие Вас ниши'),
        ),
        migrations.AddField(
            model_name='student',
            name='interest_third',
            field=models.ManyToManyField(blank=True, to='account.userintereststhird', verbose_name='Цели'),
        ),
        migrations.AddField(
            model_name='student',
            name='university',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.university', verbose_name='ВУЗ'),
        ),
        migrations.CreateModel(
            name='Mailing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=225, verbose_name='Тема')),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='img_mailing', verbose_name='Фото')),
                ('sent_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mailings', to='account.student')),
            ],
            options={
                'verbose_name': 'Рассылка',
                'verbose_name_plural': 'Рассылки',
            },
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='captain',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='captain_group_students', to='account.student'),
        ),
        migrations.AddField(
            model_name='groupstudent',
            name='students',
            field=models.ManyToManyField(related_name='group_students', to='account.student'),
        ),
        migrations.CreateModel(
            name='DataKnowledgeFree',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Тема')),
                ('url', models.TextField(verbose_name='Ссылки')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('under_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
            ],
            options={
                'verbose_name': 'База знаний бесплатно',
                'verbose_name_plural': 'База знаний бесплатно',
            },
        ),
        migrations.CreateModel(
            name='DataKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Тема')),
                ('url', models.TextField(verbose_name='Ссылки')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.chapter', verbose_name='Раздел')),
                ('under_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.undersection', verbose_name='Под раздел')),
            ],
            options={
                'verbose_name': 'База знаний платно',
                'verbose_name_plural': 'База знаний платно',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_text', models.TextField(verbose_name='Текст комментария')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='account.project', verbose_name='Проект')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.student', verbose_name='Капитан группы')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='админ')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='AnswerTestTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.testtask', verbose_name='Ответ по задаче')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответы',
                'verbose_name_plural': 'Ответы',
            },
        ),
        migrations.CreateModel(
            name='AnswersStudent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskstudent', verbose_name='Ответ на задачу')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ студента',
                'verbose_name_plural': 'Ответ студента',
            },
        ),
        migrations.CreateModel(
            name='AnswerGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='file_a', verbose_name='Ответ файлом')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Ответ ссылкой')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.taskgroup', verbose_name='Ответ группы')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ группы',
                'verbose_name_plural': 'Ответ группы',
            },
        ),
    ]
